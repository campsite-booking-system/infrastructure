version: "3"
services:
  ##
  # Reverse Proxy
  ##
  vulpee-proxy:
    image: traefik:v2.0
    container_name: vulpee-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./traefik.yaml:/etc/traefik/traefik.yaml \
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  # Back-end database
  ##
  vulpee-postgres:
    image: postgres:alpine
    container_name: vulpee-back-end-db
    volumes:
      - vulpee-postgres:/var/lib/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: vulpee
      POSTGRES_USER: vulpee
      POSTGRES_PASSWORD: vulpee

  ##
  # Back-end
  ##
  vulpee-back-end-typescript:
    build: ./docker/node
    container_name: vulpee-back-end-typescript
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start:typescript'
    volumes:
      - ../back-end:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app

  vulpee-back-end:
    build: ./docker/node
    container_name: vulpee-back-end
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start'
    volumes:
      - ../back-end:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    depends_on:
      - vulpee-postgres
      - vulpee-back-end-typescript
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=3333"
      - "traefik.http.routers.backend.rule=HostRegexp(`api.vulpee.local`, `{subdomain:[a-z]+}.api.vulpee.local`)"

  ##
  # Admin
  ##
  vulpee-admin:
    build: ./docker/node
    container_name: vulpee-admin
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start'
    volumes:
      - ../admin:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.admin.loadbalancer.server.port=3300"
      - "traefik.http.routers.admin.rule=Host(`app.vulpee.local`)"
  ##
  # Storybook
  ##
  vulpee-storybook:
    build: ./docker/node
    container_name: vulpee-storybook
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run storybook'
    volumes:
      - ../ui:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ui.loadbalancer.server.port=3301"
      - "traefik.http.routers.ui.rule=Host(`ui.vulpee.local`)"

volumes:
  vulpee-postgres:
    driver: "local"

networks:
  default:
    driver: bridge
