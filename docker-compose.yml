version: "3"
services:
  ##
  # Reverse Proxy
  ##
  owlnite-proxy:
    image: traefik
    container_name: owlnite-proxy
    command: -c /dev/null --api --docker --docker.domain=docker.localhost --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  # Back-end database
  ##
  owlnite-postgres:
    image: postgres:alpine
    container_name: owlnite-back-end-db
    volumes:
      - owlnite-postgres:/var/lib/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: owlnite
      POSTGRES_USER: owlnite
      POSTGRES_PASSWORD: owlnite

  ##
  # Back-end
  ##
  owlnite-back-end-typescript:
    build: ./docker/node
    container_name: owlnite-back-end-typescript
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start:typescript'
    volumes:
      - ../back-end:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app

  owlnite-back-end:
    build: ./docker/node
    container_name: owlnite-back-end
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start'
    volumes:
      - ../back-end:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    depends_on:
      - owlnite-postgres
      - owlnite-back-end-typescript
    labels:
      - "traefik.backend=owlnite-back-end"
      - "traefik.api.frontend.rule=Host:api.owlnite.local"
      - "traefik.client-api.frontend.rule=HostRegexp:{subdomain:[a-z|-]+}.api.owlnite.local"
      - "traefik.docker.network=default"
      - "traefik.api.port=3333"
      - "traefik.client-api.port=3333"

  ##
  # Admin
  ##
  owlnite-admin:
    build: ./docker/node
    container_name: owlnite-admin
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run start'
    volumes:
      - ../admin:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    labels:
      - "traefik.backend=owlnite-admin"
      - "traefik.frontend.rule=Host:app.owlnite.local"
      - "traefik.docker.network=default"
      - "traefik.port=3300"

  ##
  # Storybook
  ##
  owlnite-storybook:
    build: ./docker/node
    container_name: owlnite-storybook
    command: >
      bash -c 'set -euo pipefail \
        && npm install \
        && npm run storybook'
    volumes:
      - ../ui:/app
      - ~/.npmrc:/root/.npmrc
    working_dir: /app
    labels:
      - "traefik.backend=owlnite-storybook"
      - "traefik.frontend.rule=Host:ui.owlnite.local"
      - "traefik.docker.network=default"
      - "traefik.port=3300"

volumes:
  owlnite-postgres:
    driver: "local"

networks:
  default:
    driver: bridge
